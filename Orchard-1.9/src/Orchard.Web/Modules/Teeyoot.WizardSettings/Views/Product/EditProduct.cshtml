@model Teeyoot.WizardSettings.ViewModels.ProductViewModel
@{
    Layout.Title = Model.Id == null ? T("Add New Product") : T("Edit Product");

    Style.Include("multi-select/css/multi-select.css");

    Script.Require("jQuery");
    Script.Include("jquery.multi-select.js");
}

<h2>
    @(Model.Id == null ? T("Add New Product") : T("Edit Product"))
</h2>

@using (Html.BeginFormAntiForgeryPost(Url.Action("EditProduct", "Product"), FormMethod.Post, new {id = "product_form", enctype = "multipart/form-data"}))
{
    @Html.HiddenFor(m => m.Id)
    <fieldset>
        @Html.LabelFor(m => m.Name, T("Name"))
        @Html.TextBoxFor(m => m.Name, new {@class = "text large", id = "name"})
        @Html.LabelFor(m => m.SelectedProductHeadline, T("Headline"))
        @Html.DropDownListFor(m => m.SelectedProductHeadline, new SelectList(Model.ProductHeadlines, "Id", "Name"), "Select Headline ...", new {id = "headlines"})
    </fieldset>
    <h3>Product Groups</h3>
    <hr/>
    <fieldset>
        <select id="groups" name="SelectedProductGroups" multiple="multiple">
            @foreach (var productGroup in Model.ProductGroups)
            {
                <option value="@productGroup.Id" @if (productGroup.Selected)
                                                 {
                                                     <text> selected="selected" </text>
                                                 }>
                    @productGroup.Name
                </option>
            }
        </select>
        <hr/>
        <button id="add_group" type="button" class="primaryAction">Add New Group</button>
    </fieldset>
    <h3>Colours</h3>
    <hr/>
    <fieldset>
        <select id="colours" multiple="multiple">
            @foreach (var productColour in Model.ProductColours)
            {
                <option style="background-color: @productColour.HexValue;" value="@productColour.Id" @if (productColour.Selected)
                                                                                                     {
                                                                                                         <text> selected="selected" disabled="disabled" </text>
                                                                                                     }
                        data-name="@productColour.Name" data-colour="@productColour.HexValue">
                    @productColour.Name
                </option>
            }
        </select>
        <hr/>
        <button id="add_colour" type="button" class="primaryAction">Add New Colour</button>
    </fieldset>
    <h3>Selected Colours</h3>
    <hr/>
    <fieldset>
        <table id="selected-colours-table" class="items">
            <thead>
            <tr>
                <td>
                    Color
                </td>
                <td>
                    Name
                </td>
                <td>
                    Base Cost
                </td>
                <td>
                    Action
                </td>
            </tr>
            </thead>
            <tbody>
            @for (var i = 0; i < Model.SelectedProductColours.Count; i++)
            {
                <tr class="product-colour-row">
                    <td class="product-colour-colour" style="background-color: @Model.SelectedProductColours[i].HexValue;">
                        @Html.HiddenFor(m => Model.SelectedProductColours[i].Id, new {@class = "row-id"})
                        @Html.HiddenFor(m => Model.SelectedProductColours[i].ProductColourId, new {@class = "row-product-colour-id"})
                    </td>
                    <td class="product-colour-name">
                        @Model.SelectedProductColours[i].Name
                    </td>
                    <td class="product-colour-base-cost">
                        @Html.TextBoxFor(m => Model.SelectedProductColours[i].BaseCost, new {@class = "row-base-cost"})
                    </td>
                    <td>
                        <a href="javascript:;" class="remove-product-colour">Remove</a>
                    </td>
                </tr>
            }
            <tr class="product-colour-template product-colour-row" style="display: none;">
                <td class="product-colour-colour">
                    <input type="hidden" class="row-id"/>
                    <input type="hidden" class="row-product-colour-id"/>
                </td>
                <td class="product-colour-name"></td>
                <td class="product-colour-base-cost">
                    <input type="text" value="0" class="row-base-cost"/>
                </td>
                <td>
                    <a href="javascript:;" class="remove-product-colour">Remove</a>
                </td>
            </tr>
            </tbody>
        </table>
    </fieldset>
    <h3>Product Images</h3>
    <hr/>
    <fieldset>
        @Html.LabelFor(m => m.Name, T("Choose Front Image"))
        @Html.TextBoxFor(m => m.ProductImageFront, new {type = "file", accept = "image/png"})
        @Html.LabelFor(m => m.Name, T("Choose Back Image"))
        @Html.TextBoxFor(m => m.ProductImageBack, new {type = "file", accept = "image/png"})
    </fieldset>
    <button id="edit_image" type="button" class="primaryAction">Edit Image</button>
    <hr/>
    <fieldset class="save-button">
        <button type="submit" class="primaryAction">Save</button>
    </fieldset>
}

@using (Script.Foot())
{
    <script>
        function selectProductColour(productColourId) {
            var selectedColourOption = $('#colours option[value="' + productColourId + '"]');
            selectedColourOption.prop('disabled', true);

            $('#colours').multiSelect('refresh');
        };

        function deselectProductColour(productColourId) {
            var deselectedColourOption = $('#colours option[value="' + productColourId + '"]');
            deselectedColourOption.prop('disabled', false);

            $('#colours').multiSelect('refresh');

            $('#colours').multiSelect('deselect', [productColourId]);
        };

        function fixProductColoursIndexing() {
            $('#selected-colours-table .product-colour-row:visible').each(function(index, element) {
                $(element).find('.row-id').attr('name', 'SelectedProductColours[' + index + '].Id');
                $(element).find('.row-product-colour-id').attr('name', 'SelectedProductColours[' + index + '].ProductColourId');
                $(element).find('.row-base-cost').attr('name', 'SelectedProductColours[' + index + '].BaseCost');
            });
        };

        function addAndHandleProductColour(productColourId) {
            var selectedColourOption = $('#colours option[value="' + productColourId + '"]');
            var productColourTemplate = $('#selected-colours-table .product-colour-template').clone(true);
            var addedProductColour = $('#selected-colours-table tr:last').after(productColourTemplate);

            addedProductColour.removeClass('product-colour-template').show();

            $('.product-colour-colour', addedProductColour).css('background-color', selectedColourOption.data('colour'));
            $('.product-colour-colour .row-product-colour-id', addedProductColour).val(productColourId);
            $('.product-colour-name', addedProductColour).html(selectedColourOption.data('name'));
        };

        $(document).ready(function() {
            $('#colours').multiSelect({
                keepOrder: true,
                afterSelect: function(values) {
                    addAndHandleProductColour(values[0]);
                    selectProductColour(values[0]);
                }
            });

            $('.remove-product-colour').click(function() {
                var productColourId = $(this).closest('.product-colour-row').find('.row-product-colour-id').val();

                deselectProductColour(productColourId);

                $(this).closest('.product-colour-row').remove();
            });

            $('#add_colour').click(function() {
                if (confirm('All unsaved changes will be lost. Are you sure?')) {
                    window.location.href = '/Admin/Colours/Product/Add?returnUrl=' + encodeURIComponent(window.location.href);
                }
            });

            $('#groups').multiSelect({
                keepOrder: true
            });

            $('#add_group').click(function() {
                if (confirm('All unsaved changes will be lost. Are you sure?')) {
                    window.location.href = '/Admin/ProductGroups/Add?returnUrl=' + encodeURIComponent(window.location.href);
                }
            });

            $('#product_form').submit(function() {
                var name = $('#name').val();

                if ($.trim(name) === '') {
                    alert('Please enter Product Name.');
                    return false;
                }

                var selectedHeadline = $('#headlines option:selected').val();

                if (!selectedHeadline) {
                    alert('Please select Product Headline.');
                    return false;
                }

                fixProductColoursIndexing();

                return true;
            });
        });
    </script>
}