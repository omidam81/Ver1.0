@using Teeyoot.Module.Common.ExtentionMethods;
@{
    @model Teeyoot.Dashboard.ViewModels.CampaignsViewModel
    Style.Include("campaigns.css");
}

<div class="dashboard-section-title">
    @T("Campaigns")
    <span class="menu-closer" onclick="toggleMobileMenu()"><i class="fa fa-angle-up"></i></span>
    <span class="menu-opener" onclick="toggleMobileMenu()"><i class="fa fa-angle-down"></i></span>
</div>

<div class="box">
    <div class="box-header">
        <div class="box-header-title">@T("Overview")</div>
    </div>

    <div class="campaigns-overview-body">

        @for (int i = 0; i < Model.Overviews.Count; i++)
        {
            var item = Model.Overviews[i];
            if (item.Type == Teeyoot.Module.Common.Enums.OverviewType.Active)
            {
                <div class="overview-for-period selected">
                    <div><span>@item.ProductsOrdered</span>@T("products ordered")</div>
                    <div><span>@Model.Currency@item.Profit</span>@T("profit")</div>
                    <div><span>@Model.Currency@item.ToBePaid</span>@T("to be paid")</div>
                </div>
            }
            else if (item.Type != Teeyoot.Module.Common.Enums.OverviewType.AllTime)
            {
                <div class="overview-for-period">
                    <div><span>@item.ProductsOrdered</span>@T("products ordered")</div>
                    <div><span>@Model.Currency@item.Profit</span>@T("profit (includes pending profit)")</div>
                    @*<div><span></span>@T("To be paid")</div>*@
                </div>
            }
            else
            {
                <div class="overview-for-period">
                    <div><span>@item.ProductsOrdered</span>@T("products ordered")</div>
                    <div><span>@Model.Currency@item.Profit</span>@T("profit")</div>
                    @*<div><span></span>@T("To be paid")</div>*@
                </div>
            }
        }

        <div class="period-selector">
            @for (int i = 0; i < Model.Overviews.Count; i++)
            {
                var item = Model.Overviews[i];
                var current = item.Type == Teeyoot.Module.Common.Enums.OverviewType.Active ? "current" : "";
                if (i == 0)
                {
                    <span onclick="showOverviewForPeriod(@i)" class="overview-period first @current">@T(item.Type.ToString().SplitCamelCase())</span>
                }
                else if (i < Model.Overviews.Count - 1)
                {
                    <span onclick="showOverviewForPeriod(@i)" class="overview-period @current">@T(item.Type.ToString().SplitCamelCase())</span>
                }
                else
                {
                    <span onclick="showOverviewForPeriod(@i)" class="overview-period last @current">@T(item.Type.ToString().SplitCamelCase())</span>
                }
            }
        </div>
    </div>
</div>

<div class="box">
    <div class="box-header">
        <div class="group-control filters">
            <input type="text" id="campaign_list_filter" oninput="filterCampaignList(this);" placeholder="Search by filter" />

            <div class="campaign-sort filter-dropdown">
                <div class="filter-dropdown-toggle">
                    @T("Sort By")
                    @{
                        var sortBy = Enum.GetValues(typeof(Teeyoot.Module.Common.Enums.CampaignSortOrder)).GetValue(0);
                    }
                    <span class="sort-by">
                        <span data-sortby="@sortBy">
                            @T(sortBy.ToString().SplitCamelCase())
                        </span>
                    </span>
                </div>
                <div class="filter-dropdown-menu">
                    <ul>
                        @foreach (Teeyoot.Module.Common.Enums.CampaignSortOrder item in Enum.GetValues(typeof(Teeyoot.Module.Common.Enums.CampaignSortOrder)))
                        {
                            <li onclick="sortCampaignList(this)" class="filter-dropdown-item">
                                <span data-sortby="@item">
                                    @T(item.ToString().SplitCamelCase())
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="campaign-status-filter filter-dropdown">
                <div class="filter-dropdown-toggle">
                    @T("Show")
                    @{
                        var filterBy = Enum.GetValues(typeof(Teeyoot.Module.Common.Enums.CampaignStatus)).GetValue(0);
                    }
                    <span class="filtered-by">
                        <span data-filterby="@filterBy">
                            @T(filterBy.ToString().SplitCamelCase())
                        </span>
                    </span>
                </div>
                <div class="filter-dropdown-menu">
                    <ul>
                        @foreach (Teeyoot.Module.Common.Enums.CampaignStatus item in Enum.GetValues(typeof(Teeyoot.Module.Common.Enums.CampaignStatus)))
                        {
                            <li onclick="filterByStatus(this)" class="filter-dropdown-item">
                                <span data-filterby="@item">
                                    @T(item.ToString().SplitCamelCase())
                                </span>
                            </li>
                        }
                        <li onclick="filterByStatus(this)" class="filter-dropdown-item">
                            <span data-filterby="All">
                                @T("All")
                            </span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="campaigns-list-container">
        <div>
            @foreach (var c in Model.Campaigns)
            {
                var daysRemaining = c.EndDate.Subtract(DateTime.UtcNow).Days;

                <div data-name="@c.Name.ToLower()" class="campaign-card"
                     data-campaign-status="@c.Status.Name"
                     data-startdate="@c.StartDate.Ticks"
                     data-reservations="1"
                     data-enddate="@c.EndDate.Ticks"
                     data-sales="@c.Sold">

                    <div class="campaign-card-image" style="background-image: url('/Media/campaigns/@c.Id/@c.FirstProductId/normal/@(!c.ShowBack ? "front.png" : "back.png")')">

                        <div class="campaign-card-links">
                            <div>
                                <a href="@Url.Action("EditCampaign", "Dashboard", new { id = c.Id })" title="@T("Edit")">
                                    <i class="fa fa-pencil"></i>
                                </a>
                            </div>
                            <div>

                                <a href="@Url.Action("Wizard", "Dashboard", new { id = c.Id })" title="@T("Duplicate")">
                                <i class="fa fa-files-o"></i>
                                </a>
                            </div>
                        </div>

                        <div class="campaign-card-profit">
                            <span>@Model.Currency@c.Profit</span>
                        </div>

                    </div>

                    <div class="campaign-card-progress">
                        <div class="campaign-card-progress-bar">
                            <div class="campaign-card-progress-bar-completed" style="width:@(c.Sold * 100 / @c.Goal)%">
                            </div>
                        </div>
                    </div>

                    <div class="campaign-card-info">

                        <div class="campaign-card-sold">@c.Sold / @c.Goal @T("sold")</div>

                        <div class="campaign-card-left" title="@c.EndDate.ToString("dd.MM.yyyy")">
                            <span>
                                @if (daysRemaining > 0)
                                {
                                    @daysRemaining@:d @T("remaining")
                                }
                                else if (daysRemaining <= -1)
                                {
                                    @Math.Abs(daysRemaining)@:d @T("ago")
                                }
                                else
                                {
                                    var hours = c.EndDate.Subtract(DateTime.UtcNow).Hours;

                                    if (hours > 0)
                                    {
                                        @hours@:h @T("remaining")
                                    }
                                    else
                                    {
                                        @Math.Abs(hours)@:h @T("ago")
                                    }
                                }

                            </span>
                        </div>

                    </div>

                    <div class="campaign-card-title"><a href="/@c.Alias" title="@c.Name">@c.Name</a></div>

                </div>

            }
        </div>
    </div>
</div>

@using (Script.Foot())
{
    <script>
        var showOverviewForPeriod = function (index) {
            $('.overview-for-period.selected').removeClass('selected');
            $('.overview-period.current').removeClass('current');
            $($('.overview-for-period')[index]).addClass('selected');
            $($('.overview-period')[index]).addClass('current');
        }

        var filterCampaignList = function (el) {
            $('.campaign-card').each(function (index, elem) {
                elem = $(elem);
                if (elem.attr('data-Name').indexOf(el.value) === -1) {
                    elem.addClass('hidden');
                } else if (elem.hasClass('hidden')) {
                    elem.removeClass('hidden');
                }
            });
        }

        var sortCampaignList = function (el) {
            var sortBy = $(el).find('span');

            $('.sort-by span').text(sortBy.text()).attr('data-sortby', sortBy.attr('data-sortby'));

            var campaigns = $('.campaign-card');

            campaigns.sort(function (a, b) {
                var sortByValue = sortBy.attr('data-sortby');
                var an = sortByValue === "Sales" ? parseInt(b.getAttribute('data-' + sortByValue), 10) : a.getAttribute('data-' + sortByValue),
                    bn = sortByValue === "Sales" ? parseInt(a.getAttribute('data-' + sortByValue), 10) : b.getAttribute('data-' + sortByValue);

                if (an > bn) {
                    return 1;
                }
                if (an < bn) {
                    return -1;
                }
                return 0;
            });

            campaigns.detach().appendTo($('.campaigns-list-container > div'));
        }

        var filterByStatus = function (el) {
            var status = $(el).find('span');

            $('.filtered-by span').text(status.text()).attr('data-filterby', status.attr('data-filterby'));

            if (status.attr('data-filterby') === 'All') {
                $('.campaign-card').removeClass('hidden');
            } else {
                $('.campaign-card').each(function (index, el) {
                    el = $(el);
                    if (el.attr('data-campaign-status') !== status.attr('data-filterby')) {
                        el.addClass('hidden');
                    } else if (el.hasClass('hidden')) {
                        el.removeClass('hidden');
                    }
                });
            }
        }

        $('.filter-dropdown-toggle').click(function () {
            //$(".filter-dropdown").removeClass('open');
            $(this).parent().toggleClass('open')
        });

        $(document).click(function (e) {
            if (!$(e.target).hasClass("filter-dropdown-toggle") && !$(e.target).parent().parent().hasClass("filter-dropdown-toggle")) {
                $(".filter-dropdown").removeClass('open');
            }
        }
        );

        $(document).ready(function () {
            var statusFilter = document.getElementsByClassName('filtered-by');
            var sortBy = document.getElementsByClassName('sort-by');
            filterByStatus(statusFilter);
            sortCampaignList(sortBy);
        });

    </script>
}