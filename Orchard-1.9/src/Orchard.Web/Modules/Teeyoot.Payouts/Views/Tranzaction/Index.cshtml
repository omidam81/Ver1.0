@model  Teeyoot.Dashboard.ViewModels.PayoutsViewModel
@{
    Script.Require("jQuery");
    Script.Require("jQueryUI");
    Script.Include("bootstrap.min.js");
    Style.Include("AdminPayout.css");
    Style.Include("jquery.dataTables.css");
    Script.Include("jquery.dataTables.min.js");

}

@using (Script.Foot())
{




    <script type="text/javascript">




        $(document).ready(function () {
            $('.go').click(function (event) {
                event.preventDefault();
                /* Запрос на сервак */

                var inf = this.value.split(',');
                function getes(request, response) {
                    var result = new Array();
                    $.ajax({
                        async: false,
                        cache: false,
                        type: "GET",
                        url: "@(Url.Action("GetPayoutInfirmation", "Tranzaction"))",
                        data: { "userId": inf[0], "tranzId": inf[1] },
                        success: function (data) {
                            $("#userName").html(data.userName);
                            $("#email").html(data.email);
                            $("#accNumber").html(data.accountNumber);
                            $("#bankName").html(data.bankName);
                            $("#contNumber").html(data.contactNumber);
                            $("#mesAdmin").html(data.mesAdmin);
                            $("#accHoldName").html(data.accountHolderName);
                        }, error: function (data, status, resp) {
                            alert('Status: ' + data.status + '. Error message: ' + data.statusText);
                        }
                    });
                };

                
                    
                

                /* End Запрос на сервак */
                console.log(getes())
                $('#overlay').fadeIn(400,
                    function () {
                        $('#modal_form')
                            .css('display', 'block')
                            .animate({ opacity: 1, top: '50%' }, 200);
                    });
            });

            var campaignTable = $('#order-profit-table').dataTable({
                aaSorting: [[1, 'desc']],
                paging: false,
                bInfo: false,
                bSortable: true,
                aoColumnDefs: [
                { "aTargets": [0], "bSortable": true },
                { "aTargets": [1], "bSortable": true },
                { "aTargets": [2], "bSortable": true },
                { "aTargets": [3], "bSortable": true },
                { "aTargets": [4], "bSortable": true },
                { "aTargets": [5], "bSortable": false }

                ]
            });

            /* Зaкрытие мoдaльнoгo oкнa, тут делaем тo же сaмoе нo в oбрaтнoм пoрядке */
            $('#modal_close, #overlay').click(function () {
                $('#modal_form')
                    .animate({ opacity: 0, top: '45%' }, 200,
                        function () { // пoсле aнимaции
                            $(this).css('display', 'none');
                            $('#overlay').fadeOut(400);
                        }
                    );
            });
        });

        function editNode(Id) {
            var elem = document.getElementById(Id);
            var sp = elem.querySelector("span");
            var butt = elem.querySelector("button");
            var valueSpan = sp.innerHTML;
            sp.parentNode.removeChild(sp);
            var inp = document.createElement("input");
            inp.type = "text";
            inp.style.width = "40px";
            inp.value = valueSpan;
            elem.insertBefore(inp, butt);
            butt.style.display = "none";


            var butSave = document.createElement("button");
            butSave.innerHTML = "save";
            butSave.classList.add("btnEdit");
            elem.appendChild(butSave);

            butSave.addEventListener("click", function () {
                var span2 = document.createElement("span");
                span2.innerHTML = inp.value;
                inp.parentNode.removeChild(inp);
                butSave.parentNode.removeChild(butSave);
                butt.style.display = "";
                elem.insertBefore(span2, butt);
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("EditPayout", "Tranzaction"))",
                    data: addAntiForgeryToken({ "Id": Id, "Cost": span2.innerHTML }),
                    success: function (data) {
                    }, error: function (data, status, resp) {
                        alert('Status: ' + data.status + '. Error message: ' + data.statusText);
                    }
                });


            });
        }

        function addAntiForgeryToken(data) {
            var antiForgeryTokenValue = $('#anti_forgery_token').val();
            data.__RequestVerificationToken = antiForgeryTokenValue;
            return data;
        };


    </script>
}




@{
    <input type="hidden" id="anti_forgery_token" value="@Html.AntiForgeryTokenValueOrchard()" />
    <div>
        @using (Html.BeginForm("Index", "Tranzaction", FormMethod.Get))
        {
            <fieldset class="bulk-actions">
                @T("Filter:")
                @Html.DropDownListFor(model => model.filter, new SelectList(
                  new List<Object>{
                       new { value = 0 , text = "All"  },
                       new { value = 1 , text = "Pending"  },
                       new { value = 2 , text = "Completed" },
                    },
                  "value",
                  "text",
                   0))


                <button type="submit">@T("Apply")</button>
            </fieldset>
        }
    </div>

    <fieldset>
        <table id="order-profit-table" class="items">
            <thead>
                <tr class="admin-categories">
                    <th class="date">
                        <h3>@T("DATE")</h3>
                    </th>
                    <th class="event">
                        <h3>@T("EVENT")</h3>
                    </th>
                    <th class="amount">
                        <h3>@T("AMOUNT")</h3>
                    </th>
                    <th class="campaignId">
                        <h3>@T("CAMPAIGN ID")</h3>
                    </th>
                    <th class="userId">
                        <h3>@T("SELLER ID")</h3>
                    </th>
                    <th class="sellerEmail">
                        <h3>@T("SELLER EMAIL")</h3>
                    </th>
                    <th class="inf">
                        <h3></h3>
                    </th>
                </tr>
            </thead>

            <tbody>
                @if (Model.Transacts != null)
                {
                    foreach (var item in Model.Transacts)
                    {
                        <tr class="admin-categories-tr">
                            <td class="date">
                                @item.Date
                            </td>
                            <td class="event">
                                @if (string.IsNullOrEmpty(item.CampaignAlias))
                                {
                                    @item.Event
                                }
                                else
                                {
                                    string str = item.Event.Replace(item.Event.Substring(0, item.Event.IndexOf(" ")), "");
                                    <a href="@WorkContext.CurrentSite.BaseUrl/@item.CampaignAlias">@item.CampaignName</a>@str
                                }
                                
                            </td>
                            <td class="amount" id="@item.Id">
                                @if (@item.IsPlus)
                                {
                                    @T("+ ")<span>@item.Amount</span>

                                }
                                else
                                {
                                    @T("- ")<span> @item.Amount</span>
                                    if (@item.Status == "Pending")
                                    {
                                        <button class="btnEdit" type="submit" onclick="editNode(@item.Id)">@T("edit")</button>
                                    }

                                }
                            </td>
                            <td class="campaignId">
                                @item.CampaignId
                            </td>
                            <td class="userId">
                                @item.UserId
                            </td>
                            <td class="sellerEmail">
                                @item.SellerEmail
                            </td>
                            <td class="inf">
                                <button class="go" type="submit" value="@item.UserId,@item.Id">
                                    @T("inf")
                                </button>
                            </td>
                        </tr>


                    }
                }
            </tbody>
        </table>

    </fieldset>
@Display(@Model.Pager)
}



<fieldset>
    <div id="modal_form" style="">
        @Html.Partial("PaymentUserInformation")
    </div>
    <div id="overlay"></div>
</fieldset>