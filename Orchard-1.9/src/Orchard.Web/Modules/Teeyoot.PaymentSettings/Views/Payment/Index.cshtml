@model Teeyoot.Module.ViewModels.PaymentSettingsViewModel
@{
    Layout.Title = T("Payment Settings").ToString();
    Style.Include("PaymentSettings.css");
}
@using (Script.Head())
{
    <script>
        window.addEventListener("load", function () {
            var checked;


            var inp1 = document.getElementById("manual");
            var inp2 = document.getElementById("brain");
            var inp3 = document.getElementById("credit");
            var inp4 = document.getElementById("mol");
    

            if (inp2.hasAttribute("checked")) {
                //checked = 1;
                enableInputs();
            } else {
                disableInputs();
            }

            if (inp4.hasAttribute("checked")) {

                enableInputsMol();
            } else {
                disableInputsMol();
            }


            inp1.addEventListener("click", function () {
                if (inp1.hasAttribute("checked")) {
                    inp1.removeAttribute("checked");
                } else {
                    inp1.setAttribute("checked", "checked");
                }

            });

            inp2.addEventListener("click", function () {
                if (inp2.hasAttribute("checked")) {
                    disableInputs();
                    inp2.removeAttribute("checked");
                } else {
                    enableInputs();
                    inp2.setAttribute("checked", "checked");
                }

            });

            inp3.addEventListener("click", function () {
                if (inp3.hasAttribute("checked")) {
                    inp3.removeAttribute("checked");
                } else {
                    inp3.setAttribute("checked", "checked");
                }

            });

            inp4.addEventListener("click", function () {
                if (inp4.hasAttribute("checked")) {
                    disableInputsMol();
                    inp4.removeAttribute("checked");
                } else {
                    enableInputsMol();
                    inp4.setAttribute("checked", "checked");
                }

            });


            document.getElementById("SendData").addEventListener("click", function () {
                //if (checked == 2) {
                    
                if (!inp1.hasAttribute("checked") && !inp2.hasAttribute("checked") && !inp3.hasAttribute("checked") && !inp4.hasAttribute("checked")) {
                    alert("Choose at least one of the following payment methods");
                } else {



                    var publicKey = document.getElementById("textPublic").value;
                    var privateKey = document.getElementById("textPrivate").value;
                    var merchantId = document.getElementById("textMerchant").value;
                    var clientToken = document.getElementById("textToken").value;
                    var merchantIdMol = document.getElementById("textMerchMol").value;
                    var verifyKey = document.getElementById("textKey").value;

                    var result = new Array();
                    $.ajax({
                        async: false,
                        cache: false,
                        type: "POST",
                        url: "@(Url.Action("SaveSettings", "Payment"))",
                        data: addAntiForgeryToken({
                            "CashDeliv": inp1.hasAttribute("checked"),
                            "PayPal": inp2.hasAttribute("checked"),
                            "Mol": inp4.hasAttribute("checked"),
                            "CreditCard": inp3.hasAttribute("checked"),

                            "PrivateKey": privateKey.toString(),
                            "PublicKey": publicKey.toString(),
                            "MerchantId": merchantId.toString(),
                            "ClientToken": clientToken.toString(),
                            "MerchantIdMol": merchantIdMol.toString(),
                            "VerifyKey": verifyKey.toString()
                        }),
                        success: function (data) {
                            alert("Settings updated");
                        }, error: function (data, status, resp) {
                            alert('Status: ' + data.status + '. Error message: ' + data.statusText);
                        }
                    });

                }
            })

            function addAntiForgeryToken(data) {
                var antiForgeryTokenValue = $('#anti_forgery_token').val();
                data.__RequestVerificationToken = antiForgeryTokenValue;
                return data;
            };

            function enableInputs() {
                document.getElementById("textPublic").removeAttribute("disabled");
                document.getElementById("textPrivate").removeAttribute("disabled");
                document.getElementById("textMerchant").removeAttribute("disabled");
                document.getElementById("textToken").removeAttribute("disabled");
            }

            function disableInputs() {
                document.getElementById("textPublic").disabled = "disabled";
                document.getElementById("textPrivate").disabled = "disabled";
                document.getElementById("textMerchant").disabled = "disabled";
                document.getElementById("textToken").disabled = "disabled";
            }

            function enableInputsMol() {
                document.getElementById("textMerchMol").removeAttribute("disabled");
                document.getElementById("textKey").removeAttribute("disabled");
            }

            function disableInputsMol() {
                document.getElementById("textMerchMol").disabled = "disabled";
                document.getElementById("textKey").disabled = "disabled";
            }


        })
        </script>

}

@if (Model != null)
{
    <input type="hidden" id="anti_forgery_token" value="@Html.AntiForgeryTokenValueOrchard()" />
    if (Model.SettingEmpty == false)
    {
        
        <div style="margin-top:1%">
            
            @if (Model.CashDeliv)
            {
                <input type="checkbox" id="manual" name="@Model.CashDeliv" checked>
            }
            else
            {
                <input type="checkbox" id="manual" name="@Model.CashDeliv">
            }
            
            <font class="method black">
                @T("Cash on delivery")
            </font>
            <br>
            <br>
            @if (Model.PayPal)
            {
                <input type="checkbox" id="brain" name="@Model.PayPal" checked>
            }
            else { 
             <input type="checkbox" id="brain" name="@Model.PayPal">
            }
            <font class="method black">
                @T("Braintree PayPal")
            </font>
            <br>
            <hr>
            <font style="margin-left:20px" class="method black">
                @T("Public Key")
            </font>
            <input type="text" id="textPublic" class="inp marg1" value="@Model.publicKey" />
            <br>
            <br>
            <font style="margin-left:20px" class="method black">
                @T("Private Key ")
            </font>
            <input type="text" id="textPrivate" class="inp marg2" value="@Model.privateKey"/>
            <br>
            <br>
            <font style="margin-left:20px" class="method black">
                @T("Merchant Id")
            </font>
            <input type="text" id="textMerchant" class="inp marg3" value="@Model.merchantId" />
            <br>
            <br>
            <font style="margin-left:20px" class="method black">
                @T("Client Token  ")
            </font> 
            <input type="text" id="textToken" class="inp marg4" value="@Model.clientToken"/>
            <br>


            <br>
            <hr>
            @if (Model.CreditCard)
            {
                <input type="checkbox" id="credit" name="@Model.CreditCard" checked>
            }
            else { 
            <input type="checkbox" id="credit" name="@Model.CreditCard" >
            }
            <font class="method black">
                @T("  Braintree Debit/Credit Card")
            </font>
            <br>
            <br>
            @if (Model.Mol)
            {
                <input type="checkbox" id="mol" name="@Model.Mol" checked>
            }
            else { 
            <input type="checkbox" id="mol" name="@Model.Mol" >
            }
            <font class="method black">
                @T("  Molpay Online Bancking")
            </font>
            <br>
            <hr>
            <font style="margin-left:20px" class="method black">
                @T("Merchant Id")
            </font>
            <input type="text" id="textMerchMol" class="inp marg5" value="@Model.merchantIdMol"/>
            <br>
            <br>
            <font style="margin-left:20px" class="method black">
                @T("Verify Key")
            </font>
            <input type="text" id="textKey" class="inp marg6"  value="@Model.verifyKey"/>
            <br>
            <hr>
            <br>


            <button class="margb" id="SendData">@T("Apply")</button>

        </div>
    }
    else
    {
        <div><h3>@T("There are no setting to this language")</h3></div>
        <a class="button primaryAction" style="margin-right:5px" href="@Url.Action("AddSetting")" title="@T("Add")">@T("Add")</a>
    }
}